<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MatlabFunctions</name>
    </assembly>
    <members>
        <member name="T:MatlabFunctions.Retinex">
            <summary>
            The Retinex class provides a CLS compliant, MWArray interface to the M-functions
            contained in the files:
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\FastRetinex.m
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\MSR.m
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\SingleScaleRetinex.m
            <newpara></newpara>
            deployprint.m
            <newpara></newpara>
            printdlg.m
            </summary>
            <remarks>
            @Version 0.0
            </remarks>
        </member>
        <member name="M:MatlabFunctions.Retinex.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Compiler Runtime
            instance.
            </summary>
        </member>
        <member name="M:MatlabFunctions.Retinex.#ctor">
            <summary>
            Constructs a new instance of the Retinex class.
            </summary>
        </member>
        <member name="M:MatlabFunctions.Retinex.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:MatlabFunctions.Retinex.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:MatlabFunctions.Retinex.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the FastRetinex M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the FastRetinex M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="sigm">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the FastRetinex M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="sigm">Input argument #1</param>
             <param name="Img">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the FastRetinex M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the FastRetinex M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="sigm">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the FastRetinex M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="sigm">Input argument #1</param>
             <param name="Img">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.FastRetinex(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the FastRetinex function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the MSR M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the MSR M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="OldImage">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the MSR M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="OldImage">Input argument #1</param>
             <param name="Sigma">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the MSR M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the MSR M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="OldImage">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the MSR M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="OldImage">Input argument #1</param>
             <param name="Sigma">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.MSR(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the MSR function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the SingleScaleRetinex
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the SingleScaleRetinex
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <param name="sigm">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the SingleScaleRetinex
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <param name="sigm">Input argument #1</param>
             <param name="Img">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the SingleScaleRetinex
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the SingleScaleRetinex
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="sigm">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the SingleScaleRetinex
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="sigm">Input argument #1</param>
             <param name="Img">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.SingleScaleRetinex(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the SingleScaleRetinex function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             Retinex(:,:,1) = HistEqualization(Retinex(:,:,1));
             Retinex(:,:,2) = HistEqualization(Retinex(:,:,2));
             Retinex(:,:,3) = HistEqualization(Retinex(:,:,3));
             figure, imshow(uint16(Retinex));
             Normalization
             NewMax = 255;
             NewMin = 0;
             MaxR = int16(max(max(Retinex(:,:,1))));
             MaxG = max(max(Retinex(:,:,2)));
             MaxB = max(max(Retinex(:,:,3)));
             MinR = min(min(Retinex(:,:,1)));
             MinG = min(min(Retinex(:,:,2)));
             MinB = min(min(Retinex(:,:,3)));
             Retinex(:,:,1) =int16(((double(Retinex(:,:,1)) -
             double(MinR))*double(NewMax-NewMin))./double((MaxR - MinR))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,2) = int16(((double(Retinex(:,:,2)) -
             double(MinG))*double(NewMax-NewMin))./double((MaxG - MinG))+double(NewMin));
             figure, imshow(uint8(Retinex));
             Retinex(:,:,3) = int16(((double(Retinex(:,:,3)) -
             double(MinB))*double(NewMax-NewMin))./double((MaxB - MinB))+double(NewMin));
             imshow(uint16(Retinex));
             newImg = uint8(Retinex);</remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Retinex.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
        <member name="T:MatlabFunctions.Histogram">
            <summary>
            The Histogram class provides a CLS compliant, MWArray interface to the M-functions
            contained in the files:
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\HistEqualization.m
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\histslicing.m
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\LocalHE.m
            <newpara></newpara>
            D:\Knowledge\Talking Glasses\Faculty Tasks\Image Processing
            Tasks\Matlab\M-Files\LocalStat.m
            </summary>
            <remarks>
            @Version 0.0
            </remarks>
        </member>
        <member name="M:MatlabFunctions.Histogram.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Compiler Runtime
            instance.
            </summary>
        </member>
        <member name="M:MatlabFunctions.Histogram.#ctor">
            <summary>
            Constructs a new instance of the Histogram class.
            </summary>
        </member>
        <member name="M:MatlabFunctions.Histogram.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:MatlabFunctions.Histogram.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:MatlabFunctions.Histogram.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:MatlabFunctions.Histogram.HistEqualization">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the HistEqualization
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.HistEqualization(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the HistEqualization
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="img">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.HistEqualization(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the HistEqualization
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.HistEqualization(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the HistEqualization
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="img">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.HistEqualization(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the HistEqualization function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Old">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Old">Input argument #1</param>
             <param name="OldMin">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input MWArrayinterface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Old">Input argument #1</param>
             <param name="OldMin">Input argument #2</param>
             <param name="OldMax">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input MWArrayinterface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="Old">Input argument #1</param>
             <param name="OldMin">Input argument #2</param>
             <param name="OldMax">Input argument #3</param>
             <param name="NewVal">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Old">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Old">Input argument #1</param>
             <param name="OldMin">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input MWArray interface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Old">Input argument #1</param>
             <param name="OldMin">Input argument #2</param>
             <param name="OldMax">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input MWArray interface to the histslicing M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="Old">Input argument #1</param>
             <param name="OldMin">Input argument #2</param>
             <param name="OldMax">Input argument #3</param>
             <param name="NewVal">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.histslicing(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the histslicing function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the LocalHE M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the LocalHE M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the LocalHE M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="Img">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LocalHE M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LocalHE M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the LocalHE M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="Img">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalHE(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the LocalHE function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 4-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 5-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <param name="E">Input argument #5</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 6-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <param name="E">Input argument #5</param>
             <param name="M">Input argument #6</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 7-input MWArrayinterface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <param name="E">Input argument #5</param>
             <param name="M">Input argument #6</param>
             <param name="Var">Input argument #7</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 4-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 5-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <param name="E">Input argument #5</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 6-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <param name="E">Input argument #5</param>
             <param name="M">Input argument #6</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 7-input MWArray interface to the LocalStat M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="WinSize">Input argument #1</param>
             <param name="K0">Input argument #2</param>
             <param name="K1">Input argument #3</param>
             <param name="K2">Input argument #4</param>
             <param name="E">Input argument #5</param>
             <param name="M">Input argument #6</param>
             <param name="Var">Input argument #7</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.LocalStat(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the LocalStat function in which the input and output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:MatlabFunctions.Histogram.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
        <member name="T:MathWorks.MATLAB.NET.ComponentData.MCRComponentState">
            <summary>
            The MCR Component State
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_name_data">
            <summary>
            The .NET Builder component name
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_root_data">
            <summary>
            The component root data
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_public_data">
            <summary>
            The public encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_session_data">
            <summary>
            The session encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_matlabpath_data">
            <summary>
            The MATLAB path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_matlabpath_data_count">
            <summary>
            The MATLAB path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_classpath_data">
            <summary>
            The class path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_classpath_data_count">
            <summary>
            The class path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_libpath_data">
            <summary>
            The lib path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_libpath_data_count">
            <summary>
            The lib path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_mcr_application_options">
            <summary>
            The MCR application options
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_mcr_application_option_count">
            <summary>
            The MCR application options count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_mcr_runtime_options">
            <summary>
            The MCR runtime options
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_mcr_runtime_option_count">
            <summary>
            The MCR runtime options count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_mcr_pref_dir">
            <summary>
            The component preferences directory
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_set_warning_state">
            <summary>
            Runtime warning states
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_MatlabFunctions_set_warning_state_count">
            <summary>
            Runtime warning state count
            </summary>
        </member>
    </members>
</doc>
